<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | cogent free knowledge]]></title>
  <link href="http://www.joelclermont.com/categories/git/atom.xml" rel="self"/>
  <link href="http://www.joelclermont.com/"/>
  <updated>2014-07-26T15:42:32-05:00</updated>
  <id>http://www.joelclermont.com/</id>
  <author>
    <name><![CDATA[Joel Clermont]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git goodies: see all unpushed files]]></title>
    <link href="http://www.joelclermont.com/2012/08/25/git-goodies-see-all-unpushed-files/"/>
    <updated>2012-08-25T14:22:00-05:00</updated>
    <id>http://www.joelclermont.com/2012/08/25/git-goodies-see-all-unpushed-files</id>
    <content type="html"><![CDATA[<p>My preferred workflow is to be able to push changes into production using git. However, sometimes the project/server doesn't support this (yet).</p>

<p>In these scenarios, it is very useful to be able to see which files have not yet been pushed to origin. Here is a nice one-liner that does exactly this:</p>

<!-- more -->


<p><code>bash
git log origin/master..master --name-only --pretty="format:" | sort | uniq
</code></p>

<p>This assumes that you are working in master and that you don't push to origin until you deploy to production. Adjust as needed.</p>

<p>If you find yourself using this a lot, you can create an alias for it so that you can simply type: git unpushed to run this command. Edit your ~/.gitconfig file and add this under the [alias] block if you like this idea:</p>

<p><code>bash
unpushed = !sh -c 'git log origin/master..master --name-only --pretty="format:" | sort | uniq | grep -v "^$"'
</code></p>

<p>This file list could even be the input to another script which deploys the changed files to the production server. Enjoy!</p>
]]></content>
  </entry>
  
</feed>
